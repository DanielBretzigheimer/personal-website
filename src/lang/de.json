{
  "job-title": "Frontend Developer",
  "about-me": "Über mich",
  "bio": "Bio",
  "mail": "Mail",
  "website": "Website",
  "phone": "Telefon",
  "address": "Adresse",
  "birthdate": "Geburtsdatum",
  "germany": "Deutschland",
  "welcome-content": "Willkommen auf meiner persönlichen Webseite. Hier möchte ich mich und meine Fähigkeiten vorstellen. Zusätzlich soll die Seite als Beispiel Anwendung dienen, weshalb der Quellcode <1>an dieser Stelle</1> öffentlich eingesehen werden kann.",
  "about-me-content": "Ich bin Software Entwickler in der Nähe von Frankfurt am Main. Gestartet als Full Stack Developer für Windows Anwendung mit WPF habe ich meinen Fokus mit der Zeit immer weiter auf die Webentwicklung gelegt. Meine große Leidenschaft ist die Frontend-Entwicklung, allerdings habe ich in meinem bisherigen Werdegang auch Erfahrung in der Backend-Erstellung und mit Datenbanken gewinnen können. Ich bin ein großer Fan von <1>Material Design</1> und bringe mich seit 2021 auch bei der Entwicklung des Open-Source-Projekts <2>Material UI</2> ein, welches Material Design Komponenten für React zur Verfügung stellt. Neben meiner beruflichen Tätigkeit arbeite ich auch ehrenamtlich am Star Wars Fanprojekt <3>Hidden Empire Galaxy Adventures</3> als Frontend Developer.",
  "skills": "Skills",
  "programming-languages": "Programmiersprachen",
  "frameworks": "Frameworks",
  "databases": "Datenbanken",
  "integrated-development-environment": "Entwicklungsumgebungen",
  "miscellaneous": "Sonstiges",
  "operating-system": "Betriebssystem",
  "c-sharp": "C#",
  "sql": "SQL",
  "java-script": "JavaScript",
  "type-script": "TypeScript",
  "java": "Java",
  "python": "Python",
  "android": "Android (Java)",
  "dotnet": ".NET",
  "asp-dotnet-core": "ASP.NET Core",
  "react": "React",
  "angular-js": "AngularJS",
  "angular": "Angular",
  "postgre-sql": "PostgreSQL",
  "microsoft-sql-server": "Microsoft SQL Server",
  "maria-db": "MariaDB",
  "my-sql": "MySQL",
  "visual-studio": "Visual Studio",
  "visual-studio-code": "Visual Studio Code",
  "eclipse": "Eclipse",
  "android-studio": "Android Studio",
  "git": "Git",
  "html": "HTML",
  "css": "CSS",
  "scss": "SCSS",
  "razor": "Razor (CSHTML)",
  "wpf": "WPF",
  "microsoft-windows": "Microsoft Windows",
  "android-os": "Android",
  "ios": "iOS",
  "linux": "Linux (Ubuntu)",
  "curriculum-vitae": "Lebenslauf",
  "certificates": "Zertifikate",
  "interests": "Interessen",
  "sport-shooting": "Sportschießen",
  "swimming": "Schwimmen",
  "gaming": "Gaming",
  "traveling": "Reisen",
  "movies": "Filme",
  "motorcycling": "Motorradfahren",
  "imprint": "Impressum",
  "interests-description": "Neben meinem Beruf als Software Entwickler bin ich in unserem <1>Schützenverein</1> als Jugendleiter und EDV Beauftragter tätig. In den Sommer Monaten gehe ich nach der Arbeit gerne im Badesee schwimmen. Sollte das Wetter mal nicht passen, bin ich auch großer Filmliebhaber oder spiele das ein oder andere Computerspiel. In meinem Urlaub Reise und Erkunde ich gerne Europa.",
  "team-size": "Teamgröße",
  "skill": "Skill",
  "education": "Bildung",
  "work": "Beruflich",
  "private": "Privat",
  "type": "Typ",
  "reset": "Zurücksetzen",
  "results": "Ergebnisse",
  "github": "GitHub",
  "gitlab": "GitLab",
  "stack-overflow": "Stack Overflow",
  "team-size-filter": "Teamgröße zwischen {{start}} und {{end}} Entwicklern",
  "type-filter": "Typ: {{value}}",
  "active-filters": "Aktive Filter:",
  "unittest": "Unittest",
  "subversion": "Subversion",
  "c-plus-plus": "C++",
  "opc-ua": "OPC UA",
  "xml": "XML",
  "xsd": "XSD",
  "gwt": "Google Web Toolkit",
  "polymer": "Polymer",
  "selenium": "Selenium",
  "nvidia-jetson": "Nvidia Jetson",
  "intel-real-sense": "Intel Real Sense",
  "web-socket": "WebSocket",
  "rabbit-mq": "RabbitMQ",
  "team-size-label": "{{teamSize}} Entwickler",
  "wrong-language": "Wrong language?",
  "change-language": "Change",
  "other-language": "en",
  "language": "Sprache",
  "education-school": "Schulische Ausbildung",
  "education-school-content": "Johannes-Obernburger-Volksschule\nMain-Limes-Realschule\nAbschluss: Mittlere Reife",
  "education-vocational-training": "Berufsausbildung",
  "education-vocational-training-content": "Ausbildung als Fachinformatiker Anwendungsentwicklung bei APE Engineering GmbH",
  "machine-control-software": "Maschinensteuerungssoftware",
  "machine-control-software-content": "Software zur Auswertung und Konfiguration von Garn-Reinigungsmaschinen. Die Kommunikation mit der Reinigungshardware erfolgt über eine BUS Schnittstelle. Besondere Herausforderungen waren die Sicherstellung der Datensicherheit bei abruptem Ausschalten und  die schwache Hardware, auf der die Software laufen sollte. Hierzu wurde eine selbst entwickelte Datenbank und ein redundantes Speichersystem eingesetzt, um die Datenintegrität und gute Performance zu gewährleisten.",
  "windows-service-development": "Windows Service Entwicklung",
  "windows-service-development-content": "Die Anforderung war es einen Windows Service zu erstellen, der XML Dateien erstellt und in einem speziellen Ordner ablegt. Die Dateien wurden über einen OPC UA Server mit Qualitätsdaten befüllt. Um sicherzustellen, dass alle Daten korrekt verarbeitet wurden, werden die entsprechenden XML Dateien mit einer XSD Datei auf Fehler überprüft.",
  "database-version-management": "Datenbank Versionsverwaltung",
  "database-version-management-content": "Bei der Entwicklung der <1>Betriebsdatenerfassungssoftware</1> liefen wir in das Problem, dass unsere lokalen Test-Datenbanken während der Entwicklung auseinander liefen und nicht einfach miteinander geteilt werden konnten. Um dieses Problem zu lösen haben wir mit der Entwicklung dieses Tools begonnen, dass alle Unterschiede, die in der Datenbank Struktur auftreten in zwei SQL-Dateien schreibt. Eine Datei um die Änderungen anzuwenden und eine Datei um die Änderungen Rückgängig zu machen. Diese Datei kann anschließend im Git Repository eingecheckt werden. Andere Nutzer können die SQL-Dateien über das Tool importieren und so ihre Datenbank auf den neusten Stand bringen. Zusätzlich ist es auch möglich mithilfe der Dateien auf eine beliebige vorherige Version zurückzukommen. Ein großer Vorteil des Tools ist es, dass die Daten erhalten bleiben und nur die Struktur aktualisiert wird.",
  "production-data-acquisition": "Betriebsdatenerfassung",
  "production-data-acquisition-content": "Als Nachfolgeprojekt zu unserer <1>Maschinensteuerungssoftware</1> erhielten wir den Auftrag eine überliegende Betriebsdatenerfassung zu entwickeln. Hierbei sollten alle in der Fabrik vorhandenen Maschinen hinzugefügt und gemeinsam ausgewertet und verwaltet werden können. Hierzu vernetzen sich alle Maschinen mit einem zentralen Server, der die erhaltenen Daten auswertet und in einer Datenbank ablegt. Die Anzeige erfolgt über einen separaten Client, der per ClickOnce über das Netzwerk bezogen werden kann. Dieser bietet Zugriff auf einzelnen und gruppierten Maschinen Daten und Einstellungen. Zusätzlich können Trends und Berichte angezeigt werden. Die Produktion kann an der Betriebsdatenerfassung für alle Maschinen geplant und anschließend automatisch an diese verteilt werden. Die Planung erfolgt entweder über einen Wizard oder über eine Planungsübersicht, bei der sich die einzelnen Produktionen per Drag-and-drop zeitlich und auf den Maschinen anordnen lassen.",
  "machine-overview": "Maschinen Übersicht",
  "machine-overview-content": "Als ein Bestandteil der <1>Betriebsdatenerfassung</1> sollte zusätzlich eine Anwendung erstellt werden, die es erlaubt den aktuellen Zustand der Fabrik einzusehen. Dazu zählte die Anzeige aller in der Fabrik vorhandenen Maschinen inklusive konfigurierter Live-Datenpunkte. Zusätzlich sollte der Benutzer die Maschinen per Drag-and-drop beliebig auf einer der Seiten der Übersicht anordnen können. Die Anzeige sollte später nicht nur als Startbildschirm der Betriebsdatenerfassung dienen, sondern auch mit mobilen Geräte angezeigt werden können. Aufgrund dieser Anforderungen haben wir uns dafür entschieden die Anwendung, als Webapp mit <2>GWT</2> zu implementieren. Eine besondere Herausforderung war die Integration in die bestehende WPF Anwendung und der damit verbundene bidirektionale Datenaustausch.",
  "github-cef-sharp": "Github Pull Request für CefSharp",
  "github-cef-sharp-content": "Mein erster Beitrag zu einem <1>Open-Source-Projekt</1> auf GitHub. Hierbei bin ich zuvor auf einen Bug in dem von uns verwendetem Nuget Paket CefSharp gestoßen und habe ein entsprechendes <2>Ticket</2> ohne Lösung gefunden. Nach kurzer Untersuchung war der Fehler schnell aufgespürt und konnte von mir behoben werden. Der <3>Pull Request</3> wurde anschließend vom Maintainer in den Hauptbranch integriert.",
  "update-management-software": "Update Verwaltungssoftware",
  "update-management-software-content": "Zur Verteilung der <1>Betriebsdatenerfassung</1> (BDE) haben wir eine Webapp entwickelt mit der sowohl neue als auch bestehende Kunden mit der Software versorgt werden können. Alle bestehenden BDE registrieren sich beim ersten Start der Anwendung am Server mit den zuvor vom Kunden eingegebenen Daten. Danach verbinden sie sich einmal täglich oder bei manueller Anfrage um Telemetriedaten auszutauschen und nach Software-Updates zu suchen. Die Telemetriedaten können über die Webapp für jeden Kunden und global grafisch eingesehen werden. Zusätzlich kann für jeden Kunden eine eigene Software Version zugeteilt werden. Neue Software Versionen werden über die Webapp auf den Server hochgeladen inklusive Changelog und Kompatibilitätsmatrix. Über die Matrix kann der Kunde sehen welche seiner Maschinen mit welchen Features der BDE kompatibel sind. Auch können über die Anwendung Log Dateien vom System angefragt werden. Nach erfolgreichem hochladen wird eine zuvor hinterlegte Mail benachrichtigt.",
  "order-management-system": "Order Management System",
  "order-management-system-content": "Zur Verwaltung von internen Bestellvorgängen haben wir ein eigenes System entwickelt. Dieses beinhaltet sowohl alle Stammdaten (Artikel, Lieferanten, Lieferadressen) als auch die dazugehörigen Anforderungen und Bestellungen. Um die Anwendung ohne großen Aufwand aufrufen zu können wird diese als Webapp zur Verfügung gestellt und kann auch von extern aufgerufen werden. Die Anwendung passt sich automatisch der Bildschirmgröße an und kann auch vom Smartphone bedient werden (Responsive Design). Bestellungen können direkt, je nach Kosten und gewähltem Projekt, von den zuständigen Mitarbeitern freigegeben werden. Die dafür notwendigen Daten werden über eine Schnittstelle direkt aus einem Intranet entnommen. Die Anmeldung erfolgt über das Active Directory. Für verschiedenste Ereignisse gibt es Benachrichtigungen, die sich die Benutzer selbst konfigurieren können. Zu den sonstigen Features gehören dynamische Filter, Berichte, Importe und Exporte.",
  "microsoft-certified-professional-exam": "Microsoft Certified Professional Prüfung",
  "microsoft-certified-professional-exam-content": "Im März 2019 habe ich erfolgreich die MCP Prüfung 483 \"Programming in C#\" abgeschlossen.",
  "automatic-ui-tests": "Automatische UI Tests",
  "automatic-ui-tests-content": "Um die Stabilität unseres <1>Order-Management Systems</1> zu verbessern, haben wir UI Tests mit Selenium erstellt. Diese werden automatisch von unserer GitLab Pipeline ausgeführt, sobald Änderungen auf den Server gepusht werden. Dabei wird die Anwendung gebaut und in einem Docker Container gestartet. Anschließend werden die Tests auf dieser Instanz ausgeführt. Somit ist sichergestellt, dass alle Funktionalitäten nach einem Bugfix oder neuem Feature noch funktionieren. Wir konnten somit die Release-Zyklen deutlich verkürzen und uns auf die Entwicklung neuer Funktionen konzentrieren.",
  "data-analysis-and-user-administration": "Datenanalyse und Benutzerverwaltungs Anwendung",
  "data-analysis-and-user-administration-content": "Die Anwendung sollte als Webapp über den Browser erreichbar sein und Zugang zu verschiedenen Berichten bieten, die über Filter eingeschränkt werden können. Zusätzlich sollte eine Benutzerverwaltung mit Rechten und Rollen integriert werden. Die besondere Herausforderung bei diesem Projekt war der hohe Zeitdruck, unter dem die Anwendung erstellt werden sollte.",
  "support-vocational-training": "Betreuung der Auszubildenden",
  "support-vocational-training-content": "Zusätzlich zu meinem normalen Arbeitsalltag helfe ich seit Mitte 2020 bei der Betreuung der Auszubildenden. Hierzu gehört nicht nur das Beantworten von Fragen und Unterstützen bei der Programmierung, sondern auch das Erstellen von individuellen Aufgaben und die Reviews des fertigen Quellcodes.",
  "fitness-game": "Fitnessspiel Anwendung",
  "fitness-game-content": "Entwicklung einer Anwendung bei der mit einem Beamer ein Spielfeld an eine Wand projeziert wird und der Spieler sich darauf befindlichen Objekten ausweichen bzw. diese fangen muss. Die Steuerung der Anwendung erfolgt über eine React App mit einer Websocket Verbindung.",
  "video-player-application": "Video Player Anwendung",
  "video-player-application-content": "Entwicklung einer Software zum Anzeigen von Videos auf einem Beamer, die über eine RabbitMQ Nachricht empfangen werden.",
  "browser-game-development": "Browsergame Entwicklung",
  "browser-game-development-content": "Seit März 2020 gehöre ich dem ehrenamtlichen Entwicklerteam des Browsergames Hidden Empire Galaxy Adventures an. Hier wurde ich mit dem erstellen der nächsten Version (V5) beauftragt, die für das Jahr 2023 geplant ist.",
  "asset-management-application": "Webanwendung zur Assetverwaltung",
  "asset-management-application-content": "Unterstützung für die Weiterentwicklung einer AngularJS Web-App zur Assetverwaltung. Entwicklung von erweiterten Tabellen Funktionen wie eine Spaltenkonfiguration und Bearbeitungsmodus (Datagrid).",
  "compliance-training": "Compliance Schulung",
  "compliance-training-content": "",
  "personal-website": "Persönliche Webseite",
  "personal-website-content": "Als kleines Übungsprojekt für React gestartet, ist diese Webseite entstanden. Zusätzlich benutze ich diese Website um neue Web Technologien auszutesten.",
  "github-material-ui": "Material UI",
  "github-material-ui-content": "Nachdem ich MaterialUI bereits für viele private und berufliche Projekte eingesetzt habe, wollte ich mich an der Weiterentwicklung beteiligen. Hierzu habe ich meinen ersten PR auf GitHub erstellt und weitere UI Beispiele für Switch Komponenten erstellt bzw. angepasst.",
  "no-timeline-items": "Keine Einträge für diese Filter gefunden.",
  "mdx": "MDX",
  "gatsby": "Gatsby",
  "arma-website": "Homepage für einen Gaming Klan",
  "arma-website-content": "Der ARMA Clan \"Aufklärungsbataillon 178\" hatte mich gefragt, ob es mögliche wäre eine Homepage für sie zu Erstellen. Ohne genau vorgaben der UI, habe ich mich an der offiziellen ARMA Seite ausgerichtet. Da ich bis jetzt noch keine Erfahrung mit Gatsby hatte, aber bereits viel davon hörte, habe ich mich entschieden es in diesem Projekt auszuprobieren. Zusätzlich sollte der Inhalt von Personen geschrieben werden können, die keine Erfahrung in der Softwareentwicklung haben. Deshalb habe ich mich dafür entschieden diesen in MDX Dateien zu verwalten. Die Seite ist <1>hier</1> zu finden. Der Quellcode ist öffentlich und kann <2>hier</2> eingesehen werden.",
  "sq-lite": "SQLite"
}
