{
  "job-title": "Frontend Developer",
  "about-me": "About me",
  "bio": "Bio",
  "mail": "Mail",
  "website": "Website",
  "phone": "Phone",
  "address": "Address",
  "birthdate": "Date of birth",
  "germany": "Germany",
  "welcome-content": "Welcome on my personal website. Here I want to introduce myself and my skills. Additionally this site is used as example application. The source code can be publicly viewed <1>here</1>.",
  "about-me-content": "I am a software developer based near Frankfurt am Main. My great passion is front-end development, but in my career so far I have also gained experience in back-end creation and with database systems. I'm a big fan of the <1>Material Design</1> created by Google and have been involved in the development of the open source project <2>Material UI</2> since 2021, which provides material design components for React. In addition to my work, I also help on a voluntary basis on the Star Wars fan project <3>Hidden Empire Galaxy Adventures</3> as a frontend developer.",
  "skills": "Skills",
  "programming-languages": "Programming Languages",
  "frameworks": "Frameworks",
  "databases": "Databases",
  "integrated-development-environment": "IDE",
  "miscellaneous": "Miscellaneous",
  "operating-system": "Operating System",
  "c-sharp": "C#",
  "sql": "SQL",
  "java-script": "JavaScript",
  "type-script": "TypeScript",
  "java": "Java",
  "python": "Python",
  "android": "Android (Java)",
  "dotnet": ".NET",
  "asp-dotnet-core": "ASP.NET Core",
  "react": "React",
  "vue-js": "Vue.js",
  "angular-js": "AngularJS",
  "angular": "Angular",
  "postgre-sql": "PostgreSQL",
  "microsoft-sql-server": "Microsoft SQL Server",
  "maria-db": "MariaDB",
  "my-sql": "MySQL",
  "visual-studio": "Visual Studio",
  "visual-studio-code": "Visual Studio Code",
  "eclipse": "Eclipse",
  "android-studio": "Android Studio",
  "git": "Git",
  "html": "HTML",
  "css": "CSS",
  "scss": "SCSS",
  "razor": "Razor (CSHTML)",
  "wpf": "WPF",
  "microsoft-windows": "Microsoft Windows",
  "android-os": "Android",
  "ios": "iOS",
  "linux": "Linux (Ubuntu)",
  "curriculum-vitae": "Curriculum Vitae",
  "certificates": "Certificates",
  "interests": "Interests",
  "sport-shooting": "Sport Shooting",
  "swimming": "Swimming",
  "gaming": "Gaming",
  "traveling": "Traveling",
  "movies": "Movies",
  "motorcycling": "Motorcycling",
  "imprint": "Imprint",
  "interests-description": "In addition to my job as a software developer, I am organizing the IT and youth of our local shooting club. In the summer months, after work, I like to go to the swimming lake. If the weather isn't right, I'm also a big movie lover or play a computer game. In my vacation I like to travel and explore Europe.",
  "team-size": "Team Size",
  "skill": "Skill",
  "education": "Education",
  "work": "Work",
  "private": "Private",
  "type": "Type",
  "reset": "Reset",
  "results": "Results",
  "github": "GitHub",
  "gitlab": "GitLab",
  "stack-overflow": "Stack Overflow",
  "team-size-filter": "Team size between {{start}} and {{end}} developers",
  "type-filter": "Type: {{value}}",
  "active-filters": "Active Filters:",
  "unittest": "Unittest",
  "subversion": "Subversion",
  "c-plus-plus": "C++",
  "opc-ua": "OPC UA",
  "xml": "XML",
  "xsd": "XSD",
  "gwt": "Google Web Toolkit",
  "polymer": "Polymer",
  "selenium": "Selenium",
  "nvidia-jetson": "Nvidia Jetson",
  "intel-real-sense": "Intel Real Sense",
  "web-socket": "WebSocket",
  "rabbit-mq": "RabbitMQ",
  "team-size-label": "{{teamSize}} Developer",
  "wrong-language": "Falsche Sprache?",
  "change-language": "Ã„ndern",
  "other-language": "de",
  "language": "Language",
  "education-school": "School education",
  "education-school-content": "Johannes-Obernburger-Volksschule\nMain-Limes-Realschule\nGraduation: Mittlere Reife",
  "education-vocational-training": "Vocational training",
  "education-vocational-training-content": "Vocational training as software developer at APE Engineering GmbH",
  "machine-control-software": "Machine control software",
  "machine-control-software-content": "Software for evaluating and configuring yarn cleaning machines. Communication with the cleaning hardware takes place via a BUS interface. Particular challenges were ensuring data security in the event of an abrupt shutdown and the weak hardware on which the software was supposed to run. For this purpose, a database developed in-house and a redundant storage system were used to ensure data integrity and good performance.",
  "windows-service-development": "Windows service development",
  "windows-service-development-content": "The requirement was to create a Windows service that creates XML files and stores them in a special folder. The files were filled with quality data via an OPC UA server. To ensure that all data has been processed correctly, the corresponding XML files are checked for errors with an XSD file.",
  "database-version-management": "Database version management",
  "database-version-management-content": "When developing the <1>production data acquisition software</1>, we ran into the problem that our local test databases diverged during development and could not simply be shared with one another. To solve this problem we started to develop this tool that writes all differences that occur in the database structure in two SQL files. One file to apply the changes and one file to undo the changes. This file can then be checked in to the Git repository. Other users can import the SQL files via the tool and thus bring their database up to date. In addition, it is also possible to use the files to return to any previous version. A big advantage of the tool is that the data is retained and only the structure is updated.",
  "production-data-acquisition": "Production data acquisition",
  "production-data-acquisition-content": "As a follow-up project to our <1>machine control software</1>, we received the order to develop an overlying production data acquisition system. All machines in the factory should be added and jointly evaluated and managed. For this purpose, all machines are networked with a central server, which evaluates the data received and stores it in a database. The display takes place via a separate client, which can be obtained via ClickOnce over the network. This provides access to individual and grouped machine data and settings. In addition, trends and reports can be displayed. Production can be planned for all machines at the production data acquisition system and then automatically distributed to them. Planning is carried out either using a wizard or a planning overview, in which the individual productions can be arranged in time and on the machines using drag and drop.",
  "machine-overview": "Machine overview",
  "machine-overview-content": "Software for displaying all machines in a factory as a web application and integrated in production data acquisition. Machines can be placed on the overview using drag and drop and show the current production data.",
  "github-cef-sharp": "Github Pull Request for CefSharp",
  "github-cef-sharp-content": "My first contribution to an open source <1>project</1> on Github. Here I had previously found a bug and found a corresponding <2>issue</2> without a solution. After a brief investigation, the error was quickly found and resolved. The <3>pull request</3> was then integrated into the main branch by the maintainer.",
  "update-management-software": "Update management software",
  "update-management-software-content": "The software serves both as a delivery server for software updates for the operating data acquisition software and as a central contact point for telemetry data. The web application allows software updates to be uploaded and assigned individually to customers. In addition, the collected telemetry data can be displayed and graphically evaluated.",
  "order-management-system": "Order Management System",
  "order-management-system-content": "Order management system for internal orders as a web application with REST interface and PostgreSQL database.",
  "microsoft-certified-professional-exam": "Microsoft Certified Professional Exam",
  "microsoft-certified-professional-exam-content": "In March 2019 I successfully passed the MCP exam 483 \"Programming in C#\".",
  "automatic-ui-tests": "Automatic UI tests",
  "automatic-ui-tests-content": "Creation of automatic UI tests for the order management system with Selenium. The tests are carried out automatically after the build process and check the basic functions of the application.",
  "data-analysis-and-user-administration": "Data analysis and user management application",
  "data-analysis-and-user-administration-content": "Creation of a web application for viewing reports and managing users.",
  "support-vocational-training": "Support in training the trainees",
  "support-vocational-training-content": "In addition to my normal everyday work, I have been helping with the training of the apprentices since mid-2020. This includes creating tasks and answering questions.",
  "fitness-game": "Fitness game application",
  "fitness-game-content": "Development of an application in which a playing field is projected onto a wall with a projector and the player has to avoid objects on it or catch them. The application is controlled via a React app with a web socket connection.",
  "video-player-application": "Video player application",
  "video-player-application-content": "Development of software for displaying videos on a projector that are received via a RabbitMQ message.",
  "browser-game-development": "Browser game development",
  "browser-game-development-content": "Since March 2020 I have been part of the volunteer development team for the browser game Hidden Empire Galaxy Adventures. Here I was commissioned to create the next version (V5), which is planned for the year 2023.",
  "asset-management-application": "Asset management web application",
  "asset-management-application-content": "Support for the further development of an AngularJS web app for asset management. Development of extended table functions such as column configuration and editing mode (Datagrid).",
  "compliance-training": "Compliance training",
  "personal-website": "Personal website",
  "personal-website-content": "This website was started as a small practice project for React. I also use this website to test new web technologies.",
  "github-material-ui": "Material UI",
  "github-material-ui-content": "After using Material UI for many private and professional projects, I wanted to participate in the further development. For this purpose I created my first PR on GitHub and created or adapted further UI examples for switch components.",
  "no-timeline-items": "No entries found for this filter.",
  "mdx": "MDX",
  "gatsby": "Gatsby",
  "arma-website": "Gaming Clan Homepage",
  "arma-website-content": "The ARMA clan \"AufklÃ¤rungsbataillon 178\" asked me if it would be possible to create a homepage for them. Without exactly specifying the UI, I used the official ARMA site as reference. Since I haven't had any experience with Gatsby yet, but have heard a lot about it, I decided to give it a try in this project. In addition, the content should be able to be written by people who have no experience in software development. That's why I decided to manage it in MDX files. The site can be found <1>here</1>. The source code is public and can be viewed <2>here</2>.",
  "sq-lite": "SQLite"
}
